{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Slim mom",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "https://slim-mom-5group.herokuapp.com/"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Products endpoints. Interaction with products info."
    },
    {
      "name": "Users",
      "description": "Users endpoints. Interaction with user info."
    }
  ],
  "paths": {
    "/products/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search the product list",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string",
            "description": "Title of product to search"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
   "/products/recommendation": {
      "get": {
        "tags": ["Products"],
        "summary": "Returns a list of not recommended product categories",
        "parameters": [],
        "requestBody": {
          "description": "User's blood number",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
    "post": {
        "tags": ["Products"],
        "summary": "Returns a list of not recommended product categories and save user's physiological parameters",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's blood number",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized - wrong token"
          },
          "500" : {
             "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/eaten": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add the eaten product on a specific day",
        "parameters": [],
        "requestBody": {
          "description": "Product's information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEatenProductsRequest"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEatenProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["Products"],
        "summary": "Get the eaten product on a specific day",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Requested date",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEatenProductsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEatenProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/users/registration": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User registration",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User's login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500" : {
             "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/eaten/:id": {
      "delete": {
        "tags": ["Products"],
        "summary": "Delete the product which was added to eaten list",
        "parameters": [{"params": "id"}],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEatenProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500" : {
             "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "login",
          "email",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "loginName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "userId": {
              "type": "number",
              "description": "User's id",
              "example": "32143232436545474"
            }
          }
        },
        "example": [
          {
            "email": "1@gmail.com",
            "userId": "1"
          },
          {
            "email": "2@gmail.com",
            "userId": "2"
          }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "loginName"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "fgjfdng546545456fdgdfgddfd"
            },
            "login": {
              "type": "string",
              "description": "User's login",
              "example": "loginName"
            }
          }
        },
        "example": [
          {
            "email": "1@gmail.com",
            "userId": "1"
          },
          {
            "email": "2@gmail.com",
            "userId": "2"
          }
        ]
      },
      "SearchProductResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "categories": {
              "type": "array",
              "description": "Product's category",
              "example": [
                "яйца"
              ]
            },
            "weight": {
              "type": "number",
              "description": "Standard product's weight (100g) ",
              "example": "100"
            },
            "title": {
              "type": "object",
              "description": "Product's title",
              "example": {
                "ru": "Яйцо куриное (желток сухой)",
                "ua": "Яйце куряче (жовток сухий)"
              }
            },
            "calories": {
              "type": "number",
              "description": "Product's calories (for 100g)",
              "example": "623"
            },
            "groupBloodNotAllowed": {
              "type": "array",
              "description": "Array of booleans. If product is not recommended the meaning is 'true' ",
              "example": [
                null,
                true,
                false,
                false,
                false
              ]
            }
          }
        },
        "example": 
          [
            {"categories": [
              "яйца"
            ],
            "weight": 100,
            "title": {
              "ru": "Яйцо куриное (желток сухой)",
              "ua": "Яйце куряче (жовток сухий)"
            },
            "calories": 623,
            "groupBloodNotAllowed": [
              null,
              true,
              false,
              false,
              false
            ]
            },
            {"categories": [
              "мучные"
            ],
            "weight": 100,
            "title": {
                "ru": "Смесь мучная без глютена Гарнец Шоколадный торт",
                "ua": "Суміш борошняна без глютену Гарнець Шоколадний торт"
            },
            "calories": 350,
            "groupBloodNotAllowed": [
              null,
              true,
              false,
              false,
              false
            ]
            }
          ]
        
      },
      "RecommendationRequest": {
        "type": "object",
        "required": [
          "bloodGroup"
        ],
        "properties": {
          "bloodGroup": {
            "type": "number",
            "description": "User's blood group",
            "example": 2
          }
        }
      },
      "RecommendationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "productsNotAllowed": {
              "type": "array",
              "description": "List of categories not allowed",
              "example": [
                "мучные",
                "молочные",
                "мясо"
              ]
            }
          }
        },
        "example": {
          "message": "success",
          "productsNotAllowed": [
            "мучные",
            "молочные",
            "мясо"
          ]
        }
      },
      "AddEatenProductsRequest": {
        "type": "object",
        "required": [
          "title",
          "weight",
          "calories",
          "date"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Product's title",
            "example": "Banana"
          },
          "weight": {
            "type": "number",
            "description": "Product's weight",
            "example": "170"
          },
          "calories": {
            "type": "number",
            "description": "Eaten product's calories",
            "example": "450"
          },
          "date": {
            "type": "string",
            "description": "Date product was eaten",
            "example": "29.07.2021"
          }
        }
      },
      "AddEatenProductsResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "savedProductId": {
              "type": "string",
              "description": "Id of saved product"
            }
          }
        },
        "example": {
          "message": "success",
          "savedProductId": "61001b689081880004a65f49"
        }
      },
      "GetEatenProductsRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "The requested date to get the food list",
            "example": "01.05.21"
          }
        }
      },
      "GetEatenProductsResponse": {
        "type": "object",
        "items": {
          "type": "array",
          "properties": {
            "userFoodListByDay": {
              "type": "array",
              "description": "User's eaten products list at required day"
            }
          }
        },
         "example": {
            "message": "success",
            "userFoodListByDay": [
              {
              "_id": "610194d7cdcd37c2ca8d3225",
              "title": "pizza",
              "weight": "100",
              "calories": "320",
              "date": "01.06.21"
              },
              {
                "_id": "610194d7cdcd37c2ca8d3390",
                "title": "banana",
                "weight": "100",
                "calories": "220",
                "date": "01.06.21"
              }
            ]
        }
      },
      "DeleteEatenProductsResponse" : {
        "type": "object",
        "items": {
          "type": "string",
          "properties": {
            "message": {
              "type": "string",
              "description": "Result of operation"
            }
          }
        },
         "example": {
            "message": "Product has been successfully deleted"
          }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
}
}